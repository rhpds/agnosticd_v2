---
# Ignore errors when requesting certificates
# This allows provisioning to continue even if requesting certificates fails
ocp4_workload_cert_manager_ignore_errors: false

# Install certificates for Ingress Controllers
ocp4_workload_cert_manager_install_ingress_certificates: true

# Install certificates for API Endpoint
ocp4_workload_cert_manager_install_api_certificates: false

# It takes about 4 minutes per API Server to
# restart with certificates (due to AWS
# Load Balancer). Therefore sleep
# 12 minutes by default to give the kube-apiserver
# cluster operator enough time to progress.
# Wait time may be extended if it's needed
ocp4_workload_cert_manager_wait_after_api_cert_setup: 12

# In the future change to check the cluster operators instead of just pausing
ocp4_workload_cert_manager_wait_for_rollout: false

# Set to the cloud provider to be used:
# Valid values are: aws, azure, gcp, vmc
ocp4_workload_cert_manager_cloud_provider: "{{ cloud_provider if cloud_provider in ['gcp', 'azure'] else 'aws' }}"

# Set to either 'letsencrypt' or 'zerossl'
ocp4_workload_cert_manager_provider: letsencrypt

# This is the default API for letsencrypt
ocp4_workload_cert_manager_acme_url: https://acme-v02.api.letsencrypt.org/directory

# ---------------------------------------------------------------
# Retries (and restart cert manager if failed)
# ---------------------------------------------------------------
ocp4_workload_cert_manager_ingress_cert_max_retries: 3
ocp4_workload_cert_manager_api_cert_max_retries: 3

# ---------------------------------------------------------------
# Settings for ZeroSSL
# ---------------------------------------------------------------
# Set from AgnosticV to the actual ZeroSSL credentials
ocp4_workload_cert_manager_zerossl_eab_key_id: ""
ocp4_workload_cert_manager_zerossl_hmac_key: ""

# ---------------------------------------------------------------
# Settings for AWS
# ---------------------------------------------------------------
# Set from AgnosticV to the actual AWS credentials
# ocp4_workload_cert_manager_aws_region: "{{ aws_region }}"
# ocp4_workload_cert_manager_aws_access_key_id: "{{ hostvars.localhost.route53user_access_key }}"
# ocp4_workload_cert_manager_aws_secret_access_key: "{{ hostvars.localhost.route53user_secret_access_key }}"

# If a HostedZoneID is provided use that one, otherwise determine dynamically
# Use dynamic for aws and specify the hostedzone for other platforms like CNV
# ocp4_workload_cert_manager_aws_hostedzoneid: "{{ hostvars.localhost.route53_aws_zone_id | default('') }}"

ocp4_workload_cert_manager_aws_region: ""
ocp4_workload_cert_manager_aws_access_key_id: ""
ocp4_workload_cert_manager_aws_secret_access_key: ""
ocp4_workload_cert_manager_aws_hostedzoneid: ""

# ---------------------------------------------------------------
# Settings for GCP
# ---------------------------------------------------------------
# Set from AgnosticV to the actual GCP credentials
ocp4_workload_cert_manager_gcp_project_id: "{{ gcp_project_id }}"
ocp4_workload_cert_manager_gcp_credentials: "{{ gcp_credentials }}"

# ---------------------------------------------------------------
# Settings for Azure
# ---------------------------------------------------------------
# Set from AgnosticV to the actual azure credentials
ocp4_workload_cert_manager_azure_client_id: "{{ azure_service_principal }}"
ocp4_workload_cert_manager_azure_environment: AzurePublicCloud
ocp4_workload_cert_manager_azure_hostedzone_name: "{{ azure_user_domain }}"
ocp4_workload_cert_manager_azure_resource_group_name: "{{ az_dnszone_resource_group }}"
ocp4_workload_cert_manager_azure_subscription_id: "{{ azure_subscription_id }}"
ocp4_workload_cert_manager_azure_tenant_id: "{{ azure_tenant }}"

# ---------------------------------------------------------------
# Operator settings
# ---------------------------------------------------------------
ocp4_workload_cert_manager_channel: stable-v1.14
ocp4_workload_cert_manager_starting_csv: ""

ocp4_workload_cert_manager_use_catalog_snapshot: false
ocp4_workload_cert_manager_catalogsource_name: ""
ocp4_workload_cert_manager_catalog_snapshot_image: ""
ocp4_workload_cert_manager_catalog_snapshot_image_tag: ""
# ocp4_workload_cert_manager_starting_csv: cert-manager-operator.v1.14.0
ocp4_workload_cert_manager_automatic_install_plan_approval: true
