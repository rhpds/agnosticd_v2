---
- name: Get all custom AMI for this specific ( envtype / version / stage ) - plan A
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region_loop | default(aws_region) }}"
  amazon.aws.ec2_ami_info:
    owner: self
    filters:
      tag:env_type: "{{ env_type }}"
      tag:version: "{{ osrelease | default(repo_version) }}"
      tag:stages: "*{{ custom_image_stage | default('unknown') }}*"
  register: r_amifacts

- name: By default do not skip docker tasks
  ansible.builtin.set_fact:
    skip_packer_tasks: false

- name: Select AMI among candidates
  when:
  - r_amifacts is succeeded
  - r_amifacts is not skipped
  - "'images' in r_amifacts"
  - r_amifacts.images | d([]) | length > 0
  ansible.builtin.include_tasks: select_custom_image.yml

- name: Get custom AMI using the provided filter - plan B
  when:
  - r_amifacts is not skipped
  - r_amifacts is succeeded
  - r_amifacts.images | length == 0
  - custom_image_filter is defined
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region_loop | default(aws_region) }}"
  amazon.aws.ec2_ami_info:
    owner: self
    filters:
      name: "*{{ custom_image_filter }}*"
  register: r_amifacts2

- name: Select AMI
  when:
  - r_amifacts2 is not skipped
  - r_amifacts2 is succeeded
  block:
  - name: Write back the register to amifacts
    ansible.builtin.set_fact:
      amifacts: "{{ r_amifacts2 }}"

  - name: Select AMI among candidates
    when:
    - amifacts is succeeded
    - "'images' in amifacts"
    - amifacts.images | default([]) | length > 0
  ansible.builtin.include_tasks: select_custom_image.yml
