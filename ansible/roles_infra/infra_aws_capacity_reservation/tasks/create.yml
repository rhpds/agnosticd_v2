---
- name: Retrieve stack_deployed from provision-user-data.yml
  when: stack_deployed is undefined
  ansible.builtin.set_fact:
    stack_deployed: >-
      {{ lookup('agnosticd_user_data', 'stack_deployed')
      | default(false, true)
      | bool }}

- name: Retrieve the region from user-data.yml
  when: aws_region | default('', true) == ''
  ansible.builtin.set_fact:
    aws_region: "{{ lookup('agnosticd_user_data', 'aws_region') }}"

- name: Stack has not been deployed
  when: stack_deployed is not defined or not stack_deployed | bool
  block:
  - name: Create on-demand capacity reservations and save result
    agnosticd_odcr:
      reservations: "{{ agnosticd_aws_capacity_reservations }}"
      regions: "{{ agnosticd_aws_capacity_reservation_regions }}"
      aws_access_key_id: "{{ aws_access_key_id }}"
      aws_secret_access_key: "{{ aws_secret_access_key }}"
      distinct: "{{ agnosticd_aws_capacity_reservation_distinct }}"
      single_zone: "{{ agnosticd_aws_capacity_reservation_single_zone }}"
    register: r_agnosticd_aws_capacity_reservation

  - name: Set AZ and region
    ansible.builtin.set_fact:
      aws_region: "{{ r_agnosticd_aws_capacity_reservation.region }}"

  - name: Ensure aws_region is not passed as extra vars and different
    ansible.builtin.assert:
      that: aws_region == r_agnosticd_aws_capacity_reservation.region
      msg: >-
        If you want to use on-demand capacity reservations, do not set
        aws_region as extra-vars.

  - name: Set default aws_availability_zone (single AZ)
    when: r_agnosticd_aws_capacity_reservation.single_availability_zone | default('') != ''
    ansible.builtin.set_fact:
      aws_availability_zone: "{{ r_agnosticd_aws_capacity_reservation.single_availability_zone }}"

  - name: Save region in user-data
    agnosticd_user_info:
      data:
        aws_region: "{{ r_agnosticd_aws_capacity_reservation.region }}"

  - name: Save AZ in user-data
    when: r_agnosticd_aws_capacity_reservation.single_availability_zone | default('') != ''
    agnosticd_user_info:
      data:
        aws_availability_zone: "{{ r_agnosticd_aws_capacity_reservation.single_availability_zone }}"
